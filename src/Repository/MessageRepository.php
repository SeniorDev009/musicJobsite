<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends EntityRepository
{
    /**
     * Get all the unread messages for a specific thread and user
     *
     * @param MessageThread $thread
     * @param int           $userInfoId
     *
     * @return array
     */
    public function findUnreadForThread($thread, $user)
    {
        $q = $this->createQueryBuilder('m');
        $q->select('m')
                ->where('m.message_thread = :thread')
                ->andWhere($q->expr()->orx(
                    $q->expr()->andx(
                        $q->expr()->eq('m.user_info', ':user')
                    ),
                    $q->expr()->andx(
                        $q->expr()->eq('m.to_user_info', ':user')
                    )
                ))
                ->orderBy('m.created_at', 'ASC');
        if ($thread->getEmployer() == $user && $thread->getEmployerLastRead() !== null) {
            $q->andWhere('m.created_at > :created')
              ->setParameter('created', $thread->getEmployerLastRead());
        } elseif ($thread->getBidder() == $user && $thread->getBidderLastRead() != null) {
            $q->andWhere('m.created_at > :created')
              ->setParameter('created', $thread->getBidderLastRead());
        }

        $q->setParameter(':user', $user);
        $q->setParameter(':thread', $thread);

        $query = $q->getQuery();

        return $query->execute();
    }
}
