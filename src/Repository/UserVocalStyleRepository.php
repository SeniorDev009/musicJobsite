<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserVocalStylecRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserVocalStyleRepository extends EntityRepository
{
    /**
     * Get vocal style ids for user
     *
     * @param int $userInfoId
     *
     * @return array
     */
    public function getVocalStyleIdsForUser($userInfoId)
    {
        $q = $this->createQueryBuilder('uvs')
                ->select('uvs.id, vs.id as vocal_id')
                ->innerJoin('uvs.vocal_style', 'vs')
                ->where('uvs.user_info = :userInfoId');
        $params = [
            ':userInfoId' => $userInfoId,
        ];
        $q->setParameters($params);

        if ($results = $q->getQuery()->getArrayResult()) {
            $newResults = [];
            foreach ($results as $result) {
                $newResults[$result['id']] = $result['vocal_id'];
            }
            return $newResults;
        }
        return [];
    }

    /**
     * Get user vocal styles and join voted from
     *
     * @param int $userInfoId
     * @param int $fromUserInfoId
     */
    public function getByUserJoinVotedUser($userInfoId, $fromUserInfoId = null)
    {
        $q = $this->createQueryBuilder('uvs')
                ->select('uvs, vs')
                ->innerJoin('uvs.vocal_style', 'vs')
                ->where('uvs.user_info = :userInfoId');

        $params = [
            ':userInfoId' => $userInfoId,
        ];

        if ($fromUserInfoId) {
            $q->addSelect('uvsv');
            $q->leftJoin(
                'uvs.user_vocal_style_votes',
                'uvsv',
                'WITH',
                'uvsv.from_user_info = :fromUserInfoId'
            );
            $params[':fromUserInfoId'] = $fromUserInfoId;
        }

        $q->setParameters($params);
        $query = $q->getQuery();

        return $query->execute();
    }

    /**
     * Get single user vocal style by id and join voted
     *
     * @param int $id
     * @param int $fromUserInfoId
     *
     * @return UserVocalStyle|null
     */
    public function getByIdJoinVotedUser($id, $fromUserInfoId = null)
    {
        $q = $this->createQueryBuilder('uvs')
                ->select('uvs, vs')
                ->innerJoin('uvs.vocal_style', 'vs')
                ->where('uvs.id = :id');

        $params = [
            ':id' => $id,
        ];

        if ($fromUserInfoId) {
            $q->addSelect('uvsv');
            $q->leftJoin(
                'uvs.user_vocal_style_votes',
                'uvsv',
                'WITH',
                'uvsv.from_user_info = :fromUserInfoId'
            );
            $params[':fromUserInfoId'] = $fromUserInfoId;
        }

        $q->setParameters($params);
        $query = $q->getQuery();

        try {
            return $query->getOneOrNullResult();
        } catch (Doctrine\ORM\NonUniqueResultException $e) {
            return null;
        }
    }
}