<?php

namespace Vocalizr\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Vocalizr\AppBundle\Entity\MarketplaceItemAudio;

/**
 * MarketplaceItemAudioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MarketplaceItemAudioRepository extends EntityRepository
{
    /**
     * Save uploaded file to database
     *
     * @param int    $marketplaceItemId
     * @param int    $userInfoId
     * @param string $title
     * @param string $fileName
     * @param char   $flag
     *
     * @return bool|object MarketplaceItemAudio entity
     */
    public function saveUploadedFile($marketplaceItemId, $userInfoId, $title, $fileName, $flag)
    {
        $em = $this->_em;

        // Check if file exists
        $uploadDir = __DIR__ . '/../../../../tmp';
        if (!file_exists($uploadDir . DIRECTORY_SEPARATOR . $fileName)) {
            return false;
        }

        $marketplaceItem = $em->getReference('VocalizrAppBundle:MarketplaceItem', $marketplaceItemId);

        $userInfo = $em->getReference('VocalizrAppBundle:UserInfo', $userInfoId);

        $marketplaceItemAudio = new MarketplaceItemAudio();
        $marketplaceItemAudio->setUserInfo($userInfo);
        $marketplaceItemAudio->setMarketplaceItem($marketplaceItem);

        $marketplaceItemAudio->setTitle($title);
        $marketplaceItemAudio->setPath($fileName);
        // This will move the file to the correct directory once entity is saved
        $file                       = new \Symfony\Component\HttpFoundation\File\File($uploadDir . DIRECTORY_SEPARATOR . $fileName);
        $marketplaceItemAudio->file = $file;

        // Calculate length
        $getID3   = new \getid3();
        $fileInfo = $getID3->analyze($uploadDir . DIRECTORY_SEPARATOR . $fileName);
        if (isset($fileInfo['playtime_seconds'])) {
            $milliseconds = $fileInfo['playtime_seconds'] * 1000;
            $marketplaceItemAudio->setDuration($milliseconds);
            $marketplaceItemAudio->setDurationString($fileInfo['playtime_string']);
        }
        $marketplaceItemAudio->setFlag($flag);

        $em->persist($marketplaceItemAudio);
        $em->flush();

        return $marketplaceItemAudio;
    }
}
